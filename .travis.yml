# Travis CI Configuration File

# Use new Travis container-based infrastructure
# http://docs.travis-ci.com/user/workers/container-based-infrastructure/
sudo: false

# Tell Travis CI we're using PHP
language: php

# Configure caches
cache:
  apt: true

php:
  - 7.1
  - 7.0
  - 5.6
  - 5.5
  - 5.4
  - 5.3
  - 5.2

env:
  - WP_VERSION=master
  - WP_VERSION=4.7
  - WP_VERSION=4.6
  - WP_VERSION=4.5
  - WP_VERSION=4.4
  - WP_VERSION=4.3

matrix:
  fast_finish: true
  include:
    - php: nightly
      env: WP_VERSION=master
    - php: hhvm
      env: WP_VERSION=master
      sudo: required
      dist: trusty
      group: edge
      addons:
        apt:
          packages:
            - mysql-server-5.6
            - mysql-client-core-5.6
            - mysql-client-5.6
  exclude:
    - php: 7.1
      env: WP_VERSION=4.6
    - php: 7.1
      env: WP_VERSION=4.5
    - php: 7.1
      env: WP_VERSION=4.4
    - php: 7.1
      env: WP_VERSION=4.3
  allow_failures:
    - php: nightly
    - php: hhvm

before_install:
  - phpenv versions
  - mysql --version
  - php --version
  - if [[ "$TRAVIS_PHP_VERSION" != 'hhvm' ]]; then php -m fi
  - php -m
  - phpunit --version
  - curl --version
  - git --version
  - svn --version

# Clones WordPress and configures our testing environment.
before_script:
  - stable='^[0-9\.]+$'; if [[ "$TRAVIS_PHP_VERSION" =~ $stable ]]; then phpenv config-rm xdebug.ini; fi
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - |
    if [[ ${TRAVIS_PHP_VERSION:0:2} == "7." ]]; then
      composer global require "phpunit/phpunit=5.7.*"
    elif [[ ${TRAVIS_PHP_VERSION:0:3} != "5.2" ]]; then
      composer global require "phpunit/phpunit=4.8.*"
    fi
  - bash bin/install-wp-tests-travis.sh wordpress_test root '' localhost $WP_VERSION

script: phpunit --coverage-clover=coverage.clover

after_script:
  - wget https://scrutinizer-ci.com/ocular.phar
  - php ocular.phar code-coverage:upload --format=php-clover coverage.clover
